spring.application.name=Logistics

spring.datasource.url=jdbc:postgresql://localhost:5432/logistics
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuração do Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


# Define onde o Kafka está rodando
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=logistics-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

## Número de tentativas caso o envio falhe
#spring.kafka.producer.retries=3
#
## Define o binder padrão como Kafka
#spring.cloud.stream.default-binder=kafka
#
## Configuração do canal de saída (produtor)
#spring.cloud.stream.bindings.orderCreated-out-0.destination=order.created
#spring.cloud.stream.bindings.orderCreated-out-0.content-type=application/json
#
## Configuração do canal de entrada (consumidor)
#spring.cloud.stream.bindings.orderCreated-in-0.destination=order.created
#spring.cloud.stream.bindings.orderCreated-in-0.group=order-group

